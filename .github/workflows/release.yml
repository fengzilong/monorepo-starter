name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x, 22.x]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache ~/.pnpm-store
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-test-
            ${{ runner.os }}-

      - run: corepack enable
      - run: pnpm i
        env:
          COREPACK_ENABLE_DOWNLOAD_PROMPT: 0
      - run: pnpm test

  release:
    needs: ['test']
    if: "!contains(github.event.head_commit.message, 'skip release') && !contains(github.event.head_commit.message, 'skip ci') && github.event_name != 'pull_request'"
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [22.x]

    name: Release
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache ~/.pnpm-store
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-release-
            ${{ runner.os }}-
      - run: corepack enable
      - run: pnpm i
        env:
          COREPACK_ENABLE_DOWNLOAD_PROMPT: 0

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm ci:publish-packages
          commit: "chore: update versions"
          title: "chore: update versions"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}